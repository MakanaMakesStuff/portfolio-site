import{g as F,j as g,l as x,o,r as f,c as h,w as y,n as E,b as v,A as m,B as C}from"./chunk-55be1c3c.js";const i={},L={},S={},n={},p={},b=!0,w={},R={...w};i[".page"]=R;const P={},_={...P};i[".page.client"]=_;const z={},A={...z};n[".page.client"]=A;const H={},N={...H};n[".page.server"]=N;const I={},j={...I};n[".page"]=j;const B={},U={...B};p[".page.server"]=U;const O=Object.freeze(Object.defineProperty({__proto__:null,pageFilesLazy:i,pageFilesEager:L,pageFilesExportNamesLazy:S,pageFilesExportNamesEager:n,neverLoaded:p,isGeneratedFile:b},Symbol.toStringTag,{value:"Module"}));F(O);const l=g({withoutHash:!0});async function $(){const e=x();return o(e,{isHydration:!0}),o(e,await T(e._pageId)),k(),f(e)}function k(){const e=g({withoutHash:!0});h(l===e,`URL manipulated before hydration finished (\`${l}\` to \`${e}\`). Ensure the hydration finishes with \`onHydrationEnd()\` before manipulating the URL.`)}async function T(e){const a={},{pageFilesAll:t}=y();o(a,{_pageFilesAll:t});{const r=await E(t,e);if("errorFetchingStaticAssets"in r)throw r.err;const{exports:s,exportsAll:d,pageExports:c,pageFilesLoaded:u}=r.pageContextAddendum;o(a,{exports:s,exportsAll:d,pageExports:c,_pageFilesLoaded:u})}return t.filter(r=>r.fileType!==".page.server").forEach(r=>{var s;v(!(!((s=r.fileExports)===null||s===void 0)&&s.onBeforeRender),`\`export { onBeforeRender }\` of ${r.filePath} is loaded in the browser but never executed (because you are using Server-side Routing). In order to reduce the size of you browser-side JavaScript, define \`onBeforeRender()\` in \`.page.server.js\` instead. See https://vite-plugin-ssr.com/onBeforeRender-isomorphic#server-routing`,{onlyOnce:!0})}),a}G();async function G(){var e,a;const t=await $();m(t),await t.exports.render(t),C(t,"onHydrationEnd"),await((a=(e=t.exports).onHydrationEnd)===null||a===void 0?void 0:a.call(e,t))}
